// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package ery

import (
	"context"
	"github.com/srvc/glx/pkg/ery/infra/gateway/local"
	"github.com/srvc/glx/pkg/ery/infra/gateway/proxy"
	"github.com/srvc/glx/pkg/ery/infra/repository"
	"github.com/srvc/glx/pkg/ery/server"
)

// Injectors from wire.go:

func New(contextContext context.Context) (*Engine, func(), error) {
	ipPool, err := local.NewIPPool()
	if err != nil {
		return nil, nil, err
	}
	portPool := local.NewPortPool()
	app := repository.NewApp(ipPool, portPool)
	hosts, err := local.NewHosts()
	if err != nil {
		return nil, nil, err
	}
	client, cleanup, err := provideDockerClient()
	if err != nil {
		return nil, nil, err
	}
	dockerServerFactory := proxy.NewDockerServerFactory(client)
	manager := proxy.NewManager(dockerServerFactory)
	appServiceServer := server.NewAppServiceServer(app, hosts, manager)
	engine := &Engine{
		appServiceServer: appServiceServer,
	}
	return engine, func() {
		cleanup()
	}, nil
}
